{
  "version": 3,
  "sources": ["../../popmotion/dist/es/utils/clamp.js", "../../popmotion/dist/es/animations/utils/find-spring.js", "../../popmotion/dist/es/animations/generators/spring.js", "../../popmotion/dist/es/utils/progress.js", "../../popmotion/dist/es/utils/mix.js", "../../popmotion/dist/es/utils/mix-color.js", "../../popmotion/dist/es/utils/inc.js", "../../popmotion/dist/es/utils/pipe.js", "../../popmotion/dist/es/utils/mix-complex.js", "../../popmotion/dist/es/utils/interpolate.js", "../../popmotion/dist/es/easing/utils.js", "../../popmotion/dist/es/easing/index.js", "../../popmotion/dist/es/animations/generators/keyframes.js", "../../popmotion/dist/es/animations/generators/decay.js", "../../popmotion/dist/es/animations/utils/detect-animation-from-options.js", "../../popmotion/dist/es/animations/utils/elapsed.js", "../../popmotion/dist/es/animations/index.js", "../../popmotion/dist/es/utils/velocity-per-second.js", "../../popmotion/dist/es/animations/inertia.js", "../../popmotion/dist/es/utils/radians-to-degrees.js", "../../popmotion/dist/es/utils/angle.js", "../../popmotion/dist/es/utils/apply-offset.js", "../../popmotion/dist/es/utils/attract.js", "../../popmotion/dist/es/utils/degrees-to-radians.js", "../../popmotion/dist/es/utils/is-point.js", "../../popmotion/dist/es/utils/is-point-3d.js", "../../popmotion/dist/es/utils/distance.js", "../../popmotion/dist/es/utils/point-from-vector.js", "../../popmotion/dist/es/utils/to-decimal.js", "../../popmotion/dist/es/utils/smooth-frame.js", "../../popmotion/dist/es/utils/smooth.js", "../../popmotion/dist/es/utils/snap.js", "../../popmotion/dist/es/utils/velocity-per-frame.js", "../../popmotion/dist/es/utils/wrap.js", "../../popmotion/dist/es/easing/cubic-bezier.js", "../../popmotion/dist/es/easing/steps.js"],
  "sourcesContent": ["var clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nexport { clamp };\n", "import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.js';\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration, duration = _b === void 0 ? 800 : _b, _c = _a.bounce, bounce = _c === void 0 ? 0.25 : _c, _d = _a.velocity, velocity = _d === void 0 ? 0 : _d, _e = _a.mass, mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n        };\n    }\n    else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n", "import { __rest, __assign } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.js';\n\nvar durationKeys = [\"duration\", \"bounce\"];\nvar physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some(function (key) { return options[key] !== undefined; });\n}\nfunction getSpringOptions(options) {\n    var springOptions = __assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        var derived = findSpring(options);\n        springOptions = __assign(__assign(__assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0.0 : _b, _c = _a.to, to = _c === void 0 ? 1.0 : _c, _d = _a.restSpeed, restSpeed = _d === void 0 ? 2 : _d, restDelta = _a.restDelta, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    var state = { done: false, value: from };\n    var _e = getSpringOptions(options), stiffness = _e.stiffness, damping = _e.damping, mass = _e.mass, velocity = _e.velocity, isResolvedFromDuration = _e.isResolvedFromDuration;\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : (restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4);\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq_1) *\n                            Math.sin(angularFreq_1 * t) +\n                            initialDelta * Math.cos(angularFreq_1 * t)));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq_1 * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq_1 +\n                        initialDelta * Math.cos(angularFreq_1 * t)) -\n                    envelope *\n                        (Math.cos(angularFreq_1 * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq_1 *\n                                initialDelta *\n                                Math.sin(angularFreq_1 * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to -\n                    Math.exp(-undampedAngularFreq * t) *\n                        (initialDelta +\n                            (initialVelocity + undampedAngularFreq * initialDelta) *\n                                t);\n            };\n        }\n        else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq_1 *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq_1);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= options.duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) { return 0; };\n\nexport { spring };\n", "var progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n", "var mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nexport { mix };\n", "import { __assign } from 'tslib';\nimport { mix } from './mix.js';\nimport { hex, rgba, hsla } from 'style-value-types';\nimport { invariant } from 'hey-listen';\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) { return type.test(v); });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, \"Both colors must be hex/RGBA, OR both must be HSLA.\");\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== \"alpha\") {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n", "var zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) { return typeof v === 'number'; };\n\nexport { isNum, zeroPoint };\n", "var combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nexport { pipe };\n", "import { __spreadArray, __assign } from 'tslib';\nimport { complex, color } from 'style-value-types';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { isNum } from './inc.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) { return mix(origin, target, v); };\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArray([], from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            }\n            else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL &&\n        originStats.numRGB === targetStats.numRGB &&\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nexport { mixArray, mixComplex, mixObject };\n", "import { progress } from './progress.js';\nimport { mix } from './mix.js';\nimport { mixColor } from './mix-color.js';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.js';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.js';\nimport { pipe } from './pipe.js';\nimport { invariant } from 'hey-listen';\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0], to = _a[1];\n    var mixer = _b[0];\n    return function (v) { return mixer(progress(from, to, v)); };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, isClamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? function (v) { return interpolator(clamp(input[0], input[inputLength - 1], v)); }\n        : interpolator;\n}\n\nexport { interpolate };\n", "var reverseEasing = function (easing) { return function (p) { return 1 - easing(1 - p); }; };\nvar mirrorEasing = function (easing) { return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n}; };\nvar createExpoIn = function (power) { return function (p) { return Math.pow(p, power); }; };\nvar createBackIn = function (power) { return function (p) {\n    return p * p * ((power + 1) * p - power);\n}; };\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1\n            ? 0.5 * backEasing(p)\n            : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nexport { createAnticipate, createBackIn, createExpoIn, mirrorEasing, reverseEasing };\n", "import { createExpoIn, reverseEasing, mirrorEasing, createBackIn, createAnticipate } from './utils.js';\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) { return p; };\nvar easeIn = createExpoIn(2);\nvar easeOut = reverseEasing(easeIn);\nvar easeInOut = mirrorEasing(easeIn);\nvar circIn = function (p) { return 1 - Math.sin(Math.acos(p)); };\nvar circOut = reverseEasing(circIn);\nvar circInOut = mirrorEasing(circOut);\nvar backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = reverseEasing(backIn);\nvar backInOut = mirrorEasing(backIn);\nvar anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0)\n        return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD\n        ? 7.5625 * p2\n        : p < BOUNCE_SECOND_THRESHOLD\n            ? 9.075 * p2 - 9.9 * p + 3.4\n            : p < BOUNCE_THIRD_THRESHOLD\n                ? ca * p2 - cb * p + cc\n                : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0))\n        : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nexport { anticipate, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, easeIn, easeInOut, easeOut, linear };\n", "import { interpolate } from '../../utils/interpolate.js';\nimport { easeInOut } from '../../easing/index.js';\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () { return easing || easeInOut; }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) { return o * duration; });\n}\nfunction keyframes(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.to, to = _c === void 0 ? 1 : _c, ease = _a.ease, offset = _a.offset, _d = _a.duration, duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n", "function decay(_a) {\n    var _b = _a.velocity, velocity = _b === void 0 ? 0 : _b, _c = _a.from, from = _c === void 0 ? 0 : _c, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 350 : _e, _f = _a.restDelta, restDelta = _f === void 0 ? 0.5 : _f, modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () { },\n    };\n}\n\nexport { decay };\n", "import { spring } from '../generators/spring.js';\nimport { keyframes } from '../generators/keyframes.js';\nimport { decay } from '../generators/decay.js';\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    }\n    else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") ||\n        (keys.has(\"duration\") && !keys.has(\"dampingRatio\"))) {\n        return keyframes;\n    }\n    else if (keys.has(\"dampingRatio\") ||\n        keys.has(\"stiffness\") ||\n        keys.has(\"mass\") ||\n        keys.has(\"damping\") ||\n        keys.has(\"restSpeed\") ||\n        keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nexport { detectAnimationFromOptions };\n", "function loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) { delay = 0; }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) { delay = 0; }\n    if (isForwardPlayback === void 0) { isForwardPlayback = true; }\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nexport { hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n", "import { __rest, __assign } from 'tslib';\nimport { detectAnimationFromOptions } from './utils/detect-animation-from-options.js';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../utils/interpolate.js';\nimport { hasRepeatDelayElapsed, reverseElapsed, loopElapsed } from './utils/elapsed.js';\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () { return sync.update(passTimestamp, true); },\n        stop: function () { return cancelSync.update(passTimestamp); },\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from, _d = _a.autoplay, autoplay = _d === void 0 ? true : _d, _e = _a.driver, driver = _e === void 0 ? framesync : _e, _f = _a.elapsed, elapsed = _f === void 0 ? 0 : _f, _g = _a.repeat, repeatMax = _g === void 0 ? 0 : _g, _h = _a.repeatType, repeatType = _h === void 0 ? \"loop\" : _h, _j = _a.repeatDelay, repeatDelay = _j === void 0 ? 0 : _j, onPlay = _a.onPlay, onStop = _a.onStop, onComplete = _a.onComplete, onRepeat = _a.onRepeat, onUpdate = _a.onUpdate, options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate };\n", "function velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n", "import { __assign } from 'tslib';\nimport { animate } from './index.js';\nimport { velocityPerSecond } from '../utils/velocity-per-second.js';\nimport { getFrameData } from 'framesync';\n\nfunction inertia(_a) {\n    var _b = _a.from, from = _b === void 0 ? 0 : _b, _c = _a.velocity, velocity = _c === void 0 ? 0 : _c, min = _a.min, max = _a.max, _d = _a.power, power = _d === void 0 ? 0.8 : _d, _e = _a.timeConstant, timeConstant = _e === void 0 ? 750 : _e, _f = _a.bounceStiffness, bounceStiffness = _f === void 0 ? 500 : _f, _g = _a.bounceDamping, bounceDamping = _g === void 0 ? 10 : _g, _h = _a.restDelta, restDelta = _h === void 0 ? 1 : _h, modifyTarget = _a.modifyTarget, driver = _a.driver, onUpdate = _a.onUpdate, onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    }\n    else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if ((heading_1 === 1 && v > boundary_1) ||\n                (heading_1 === -1 && v < boundary_1)) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: function () { return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(); },\n    };\n}\n\nexport { inertia };\n", "var radiansToDegrees = function (radians) { return (radians * 180) / Math.PI; };\n\nexport { radiansToDegrees };\n", "import { radiansToDegrees } from './radians-to-degrees.js';\nimport { zeroPoint } from './inc.js';\n\nvar angle = function (a, b) {\n    if (b === void 0) { b = zeroPoint; }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nexport { angle };\n", "var applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        }\n        else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nexport { applyOffset };\n", "var identity = function (v) { return v; };\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0\n            ? origin + springModifiedDisplacement\n            : origin - springModifiedDisplacement;\n    };\n};\nvar attract = createAttractor();\nvar attractExpo = createAttractor(Math.sqrt);\n\nexport { attract, attractExpo, createAttractor };\n", "var degreesToRadians = function (degrees) { return (degrees * Math.PI) / 180; };\n\nexport { degreesToRadians };\n", "var isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nexport { isPoint };\n", "import { isPoint } from './is-point.js';\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nexport { isPoint3D };\n", "import { isPoint } from './is-point.js';\nimport { isPoint3D } from './is-point-3d.js';\nimport { isNum } from './inc.js';\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    }\n    else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nexport { distance };\n", "import { degreesToRadians } from './degrees-to-radians.js';\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nexport { pointFromVector };\n", "var toDecimal = function (num, precision) {\n    if (precision === void 0) { precision = 2; }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nexport { toDecimal };\n", "import { toDecimal } from './to-decimal.js';\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) { smoothing = 0; }\n    return toDecimal(prevValue +\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\n};\n\nexport { smoothFrame };\n", "import { smoothFrame } from './smooth-frame.js';\nimport { getFrameData } from 'framesync';\n\nvar smooth = function (strength) {\n    if (strength === void 0) { strength = 50; }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta\n            ? smoothFrame(previousValue, v, timeDelta, strength)\n            : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nexport { smooth };\n", "var snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) { return Math.round(v / points) * points; };\n    }\n    else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0)\n                    return point;\n                if (distance > lastDistance)\n                    return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1)\n                    return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nexport { snap };\n", "function velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nexport { velocityPerFrame };\n", "var wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n", "import { linear } from './index.js';\n\nvar a = function (a1, a2) { return 1.0 - 3.0 * a2 + 3.0 * a1; };\nvar b = function (a1, a2) { return 3.0 * a2 - 6.0 * a1; };\nvar c = function (a1) { return 3.0 * a1; };\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        }\n        else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2)\n        return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) /\n            (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        }\n        else if (initialSlope === 0.0) {\n            return guessForT;\n        }\n        else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nexport { cubicBezier };\n", "import { clamp } from '../utils/clamp.js';\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) { direction = 'end'; }\n    return function (progress) {\n        progress =\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { steps };\n"],
  "mappings": "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",
  "names": []
}
